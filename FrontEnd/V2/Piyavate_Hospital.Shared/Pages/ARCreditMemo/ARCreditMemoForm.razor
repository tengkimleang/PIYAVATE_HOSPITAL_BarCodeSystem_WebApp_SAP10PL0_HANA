@* @page "/arcreditmemo" *@
@inherits MvvmComponentBase<ArCreditMemoViewModel>
@rendermode InteractiveWebAssembly
@* @attribute [StreamRendering] *@
<PageTitle>A/R Credit Memo</PageTitle>
@if (ViewModel.IsView is false)
{
    <p>Loading ........</p>
}
else
{
    @if (_isView == false)
    {
        <FluentLayout Style="margin-top: 0;">

            <FluentHeader Style="background-color: transparent;padding: 0;z-index: 0;">
                <FluentBreadcrumb>
                    <FluentBreadcrumbItem>
                        @_stringDisplay
                        <FluentIcon Value="@(new Icons.Regular.Size16.Archive())" Color="@Color.Neutral" Slot="start" />
                    </FluentBreadcrumbItem>
                </FluentBreadcrumb>
                <FluentSpacer />
                <FluentButton OnClick="ListCopyFromPurchaseOrder" IconEnd="@(new Icons.Filled.Size24.Search())">
                    Copy @_fromWord
                </FluentButton>
                &nbsp;&nbsp;
                <FluentButton OnClick="OpenListDataAsyncAsync" IconEnd="@(new Icons.Filled.Size24.Search())">
                    Search
                </FluentButton>
                &nbsp;&nbsp;
                <FluentButton OnClick="(e) => OnSaveTransaction()" IconEnd="@(new Icons.Filled.Size24.Save())">
                    Save
                </FluentButton>
                &nbsp;&nbsp;
                <FluentButton OnClick="@((e) => OnSaveTransaction("print"))" IconEnd="@(new Icons.Filled.Size24.PrintAdd())">
                    @_saveWord Print
                </FluentButton>
            </FluentHeader>
            <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
                <FluentBodyContent Class="body-content" Style="height:90% !important;">
                    <div class="content">
                        <FluentGrid Spacing="2" OnBreakpointEnter="@UpdateGridSize" AdaptiveRendering="true">
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentSelect Width="100%"
                                              TOption="Series"
                                              Required Label="Series"
                                              Items="ViewModel.Series"
                                              OptionText="@(i => i.SeriesName)"
                                              OptionValue="@(i => i.Code)"
                                              @bind-Value="@ViewModel.ARCreditMemoForm.Series" />
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentTextField Value="@ViewModel.Series.First(x=>x.Code==ViewModel.ARCreditMemoForm.Series).DocNum" 
                                                 Label="Document Number" style="width: 100%;" 
                                                 ReadOnly></FluentTextField>
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentDatePicker @bind-Value="@ViewModel.ARCreditMemoForm.DocDate" Label="DocDate" style="width: 100%;" />
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentDatePicker @bind-Value="@ViewModel.ARCreditMemoForm.TaxDate" Label="TaxDate" style="width: 100%;" />
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="6" xl="6">
                                <FluentAutocomplete Required
                                                    TOption="Vendors"
                                                    Width="100%"
                                                    Placeholder="Customer"
                                                    OnOptionsSearch="OnSearch"
                                                    MaximumOptionsSearch="1"
                                                    Label="Customer"
                                                    Virtualize="true"
                                                    Items="ViewModel.Customers"
                                                    MaximumSelectedOptions="1"
                                                    OptionText="@(item => $"{item.VendorCode} - {item.VendorName}")"
                                                    @bind-SelectedOptions="@SelectedVendor" />

                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentSelect Width="100%"
                                              TOption="ContactPersons"
                                              Required
                                              Label="Contact"
                                              Items="ViewModel.ContactPeople.Where(x => x.CardCode == SelectedVendor.FirstOrDefault()?.VendorCode)"
                                              OptionText="@(i => i.ContactName)"
                                              OptionValue="@(i => i.ContactName)"
                                              SelectedOption="ViewModel.ContactPeople.Where(x => x.CardCode == SelectedVendor.FirstOrDefault()?.VendorCode).FirstOrDefault()"
                                              @bind-Value="ViewModel.ARCreditMemoForm.ContactPersonCode" />
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="4" lg="3" xl="3">
                                <FluentTextField Label="Ref Inv" style="width: 100%;"></FluentTextField>
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="12" lg="12" xl="12" Justify="JustifyContent.FlexEnd">
                                <FluentButton IconEnd="@(new Icons.Filled.Size24.Add())" OnClick="async (e) => await OpenDialogAsync(new()).ConfigureAwait(false)">
                                    Add Line
                                </FluentButton>
                            </FluentGridItem>
                            <FluentGridItem xs="12">
                                <div class="grid" style="width: 100%; overflow:auto;">
                                    <FluentDataGrid TGridItem=@DeliveryOrderLine
                                                    ResizableColumns="true"
                                                    GridTemplateColumns="0.25fr 1fr 0.5fr 1fr 0.5fr 0.5fr 0.5fr 0.5fr 0.5fr"
                                                    Style=@_dataGrid
                                                    Items="ViewModel.ARCreditMemoForm.Lines?.AsQueryable()">
                                        <PropertyColumn Title="No ." Property="@(c => c.LineNum)" Sortable="true" Tooltip="true" />
                                        <TemplateColumn Tooltip="true" Title="Action">
                                            <FluentButton Style="color:#BC2F32" OnClick="(e) => DeleteLine(ViewModel.ARCreditMemoForm.Lines!.IndexOf(context))" IconEnd="@(new Icons.Regular.Size24.Delete().WithColor(Color.Error))">
                                                Delete
                                            </FluentButton>
                                            <FluentButton OnClick="(e) => OpenDialogAsync(context)" IconEnd="@(new Icons.Regular.Size24.Edit().WithColor(Color.Info))">
                                                Edit
                                            </FluentButton>
                                        </TemplateColumn>
                                        <PropertyColumn Title="Item Code" Property="@(c => c.ItemCode)" Tooltip="true" />
                                        <PropertyColumn Title="Item Name" Property="@(c => c.ItemName)" Tooltip="true" />
                                        <PropertyColumn Title="Qty" Property="@(c => c.Qty)" Tooltip="true" />
                                        <PropertyColumn Title="Price" Property="@(c => c.Price)" Tooltip="true" />
                                        <PropertyColumn Title="VatCode" Property="@(c => c.VatCode)" Tooltip="true" />
                                        <PropertyColumn Title="Warehouse" Property="@(c => c.WarehouseCode)" Tooltip="true" />
                                        <PropertyColumn Title="Manage Item" Property="@(c => c.ManageItem)" Tooltip="true" />
                                    </FluentDataGrid>
                                </div>
                            </FluentGridItem>
                        </FluentGrid>
                    </div>
                </FluentBodyContent>
            </FluentStack>
        </FluentLayout>
    }
    else
    {
        <Tri_Wall.Shared.Views.GoodReceptPo.ViewGoodReceiptPoForm AddNew="OnView"
                                                                  Search="OpenListDataAsyncAsync"
                                                                  OnViewBatchOrSerial="OnGetBatchOrSerial"
                                                                  Title="AR Credit Memo"
                                                                  GetGoodReceiptPoHeaderDetailByDocNum="ViewModel.ARCreditMemoHeaderDetailByDocNums.FirstOrDefault()"
                                                                  GoodReceiptPoLineByDocNums="ViewModel.ARCreditMemoLineByDocNums" />
    }

    <FluentOverlay @bind-Visible=@_visible
                   Opacity="0.4"
                   FullScreen="true"
                   OnClose="OnCloseOverlay"
                   PreventScroll=true>
        <FluentProgressRing />
    </FluentOverlay>
}
